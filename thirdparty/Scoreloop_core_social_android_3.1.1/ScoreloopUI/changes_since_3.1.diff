diff --git a/ScoreloopUI/.settings/org.eclipse.jdt.core.prefs b/ScoreloopUI/.settings/org.eclipse.jdt.core.prefs
new file mode 100644
index 0000000..8000cd6
--- /dev/null
+++ b/ScoreloopUI/.settings/org.eclipse.jdt.core.prefs
@@ -0,0 +1,11 @@
+eclipse.preferences.version=1
+org.eclipse.jdt.core.compiler.codegen.inlineJsrBytecode=enabled
+org.eclipse.jdt.core.compiler.codegen.targetPlatform=1.6
+org.eclipse.jdt.core.compiler.codegen.unusedLocal=preserve
+org.eclipse.jdt.core.compiler.compliance=1.6
+org.eclipse.jdt.core.compiler.debug.lineNumber=generate
+org.eclipse.jdt.core.compiler.debug.localVariable=generate
+org.eclipse.jdt.core.compiler.debug.sourceFile=generate
+org.eclipse.jdt.core.compiler.problem.assertIdentifier=error
+org.eclipse.jdt.core.compiler.problem.enumIdentifier=error
+org.eclipse.jdt.core.compiler.source=1.6
diff --git a/ScoreloopUI/AndroidManifest.xml b/ScoreloopUI/AndroidManifest.xml
index 419a230..02beafe 100644
--- a/ScoreloopUI/AndroidManifest.xml
+++ b/ScoreloopUI/AndroidManifest.xml
@@ -4,7 +4,7 @@
 	android:versionCode="1"
 	android:versionName="1.0">
 
-	<uses-sdk android:minSdkVersion="4" />
+	<uses-sdk android:minSdkVersion="4" android:targetSdkVersion="17" />
 	<application>
 
 		<activity android:name="com.scoreloop.client.android.ui.EntryScreenActivity" android:theme="@android:style/Theme.Black.NoTitleBar.Fullscreen"/>
diff --git a/ScoreloopUI/project.properties b/ScoreloopUI/project.properties
index 581aeeb..3606847 100644
--- a/ScoreloopUI/project.properties
+++ b/ScoreloopUI/project.properties
@@ -10,6 +10,6 @@
 # Indicates whether an apk should be generated for each density.
 split.density=false
 # Project target.
-target=android-4
+target=android-17
 android.library=true
 android.library.reference.1=../ScoreloopCore
diff --git a/ScoreloopUI/src/com/scoreloop/client/android/ui/component/base/Configuration.java b/ScoreloopUI/src/com/scoreloop/client/android/ui/component/base/Configuration.java
index cfacf4a..957ebae 100644
--- a/ScoreloopUI/src/com/scoreloop/client/android/ui/component/base/Configuration.java
+++ b/ScoreloopUI/src/com/scoreloop/client/android/ui/component/base/Configuration.java
@@ -117,12 +117,7 @@ public class Configuration {
 			final int minMode = game.getMinMode();
 			final int modeCount = game.getModeCount();
 
-			_modesNames = new String[modeCount];
-			for (int i = minMode; i < (minMode + modeCount); i++) {
-				_modesNames[i - minMode] = ScoreFormatter.getDefaultScoreFormatter()
-						.formatScore(new Score(null, Collections.<String, Object> singletonMap(Game.CONTEXT_KEY_MODE, i)),
-								ScoreFormatKey.ModeOnlyFormat);
-			}
+			_modesNames = ScoreFormatter.getDefaultScoreFormatter().getDefinedModesNames(minMode, modeCount);
 		} else {
 			_modesNames = new String[0];
 		}
@@ -211,10 +206,8 @@ public class Configuration {
 		if ((game != null) && game.getModeCount() > 1) {
 			final int modeCount = game.getModeCount();
 			final int minMode = session.getGame().getMinMode();
-			final String[] modesNames = ScoreFormatter.getDefaultScoreFormatter().getDefinedModesNames(minMode, modeCount);
-			// verify modes from score formatter
-			for (int i = 0; i < modesNames.length; i++) {
-				if (modesNames[i] == null) {
+			for (int i = 0; i < _modesNames.length; i++) {
+				if (_modesNames[i] == null) {
 					throw new ConfigurationException("no name configured for mode " + (minMode + i));
 				}
 			}
diff --git a/ScoreloopUI/src/com/scoreloop/client/android/ui/framework/ScreenActivity.java b/ScoreloopUI/src/com/scoreloop/client/android/ui/framework/ScreenActivity.java
index 0479794..1217831 100644
--- a/ScoreloopUI/src/com/scoreloop/client/android/ui/framework/ScreenActivity.java
+++ b/ScoreloopUI/src/com/scoreloop/client/android/ui/framework/ScreenActivity.java
@@ -33,6 +33,8 @@ import android.view.View;
 import android.view.View.OnClickListener;
 import android.view.ViewGroup;
 import android.view.ViewParent;
+import android.view.Window;
+import android.view.WindowManager;
 import android.widget.ImageView;
 
 import com.scoreloop.client.android.ui.R;
@@ -130,10 +132,26 @@ public class ScreenActivity extends ActivityGroup implements ScreenActivityProto
 		}
 	}
 
+	public static void addLegacyOverflowButton(Window window) {
+		if (window.peekDecorView() == null) {
+			throw new RuntimeException("Must call addLegacyOverflowButton() after setContentView()");
+		}
+
+		try {
+			window.addFlags(WindowManager.LayoutParams.class.getField("FLAG_NEEDS_MENU_KEY").getInt(null));
+		} catch (NoSuchFieldException e) {
+			// Ignore since this field won't exist in most versions of Android
+		} catch (IllegalAccessException e) {
+			Log.w("ScoreloopUI.Framework", "Could not access FLAG_NEEDS_MENU_KEY in addLegacyOverflowButton()", e);
+		}
+	}
+
 	@Override
 	public void onCreate(final Bundle savedInstanceState) {
 		super.onCreate(savedInstanceState);
 		setContentView(R.layout.sl_screen);
+		
+		addLegacyOverflowButton(getWindow());
 
 		final ImageView closeButton = (ImageView) findViewById(R.id.sl_status_close_button);
 		if (closeButton != null) {
